<!DOCTYPE html>
<html>
<head>
  <title>NAVISTA</title>
  <link href='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.css' rel='stylesheet'/>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      overflow: hidden; 
    }
    .search-container {
      position: absolute;
      top: 20px;
      left: 20px;
      background: white;
      padding: 10px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      z-index: 1; 
    }
    .search-container input[type="text"] {
      padding: 10px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 4px; 
      width: 300px; 
    }
    .search-container button {
      padding: 10px 20px;
      font-size: 16px;
      background-color: #2a6a7c;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin-left: 10px;
    }
    .search-container button:hover {
      background-color: #1d4955;
    }
    #map {
      width: 100vw; 
      height: 100vh; 
    }
    img {
      padding: 0;
      margin: 0;
    }

    #error-message {
      color: red;
        margin-top: 10px;
    }
  </style>
</head>

<body>

  <div class="search-container">
    <img src="https://i.pinimg.com/736x/0c/69/e8/0c69e8197ae956eef58aee2509891e2c.jpg" width=100 height=100>      
    <form id="geocodingForm">
      <input type="text" id="inputField" name="input" placeholder="Digite um CEP ou endereço" required>
      <button type="submit">Buscar</button>
      <div id="error-message"></div>
    </form>
  </div>
  <div id="map"></div>

  <script src='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.js'></script>
  <script>
    const token = 'pk.eyJ1IjoiYW1hbmRpdGEiLCJhIjoiY2x5eWJzdGl4MGhmYzJrcHJuYnY1ZTM3aCJ9.IsaeTvf1a7HSHMV2i3obQQ';
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('geocodingForm');
      const errorDiv = document.getElementById('error-message');
      const mapDiv = document.getElementById('map');

      form.addEventListener('submit', async function(event) {
        event.preventDefault();
        errorDiv.textContent = '';
        mapDiv.innerHTML = ''; // Limpa o mapa existente

        const input = document.getElementById('inputField').value.trim();

        try {
          let locationData;

          if (/^\d{8}$/.test(input)) {
            locationData = await searchByCEP(input);
          } else if (/[a-zA-Z]/.test(input)) {
            locationData = await searchByAddress(input);
          } else {
            throw new Error('Entrada inválida. Por favor, insira um CEP ou endereço válido.');
          }

          if (!locationData) {
            throw new Error('Localização não encontrada.');
          }

          generateMap(locationData.longitude, locationData.latitude);
        } catch (error) {
          errorDiv.textContent = error.message;
        }
      });

      async function searchByCEP(cep) {
        const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
        const data = await response.json();
        if (data.erro) {
          throw new Error('CEP não encontrado');
        }

        const fullAddress = `${data.logradouro}, ${data.bairro}, ${data.localidade}, ${data.uf}, Brazil`;
        return await geocodeAddress(fullAddress);
      }

      async function searchByAddress(address) {
        return await geocodeAddress(address);
      }

      async function geocodeAddress(address) {
        const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(address)}.json?access_token=${token}&limit=1`);
        const data = await response.json();

        if (!data.features || data.features.length === 0) {
          return null;
        }

        const match = data.features[0];
        return {
          longitude: match.center[0],
          latitude: match.center[1]
        };
      }

      function generateMap(longitude, latitude) {
        mapboxgl.accessToken = token;
        const map = new mapboxgl.Map({
          container: 'map',
          style: 'mapbox://styles/mapbox/streets-v11',
          center: [longitude, latitude],
          zoom: 14
        });

        new mapboxgl.Marker()
          .setLngLat([longitude, latitude])
          .addTo(map);
      }
    });
  </script>
</body>
</html>
